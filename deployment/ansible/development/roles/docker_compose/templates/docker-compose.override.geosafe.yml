version: '2'

services:

  {% if docker_port_forward.db is defined %}

  db:
    ports:
      # - "6543:5432"
      {% if docker_port_forward.db.db is defined %}

      - "{{ docker_port_forward.db.db }}:5432"

      {% endif %}
  {% endif %}

  qgis-server:
    image: tutum/haproxy
    environment:
      - BALANCE=roundrobin
      - MODE=http
    links:
      - qgis-server-backend
    network_mode: "bridge"
    {% if docker_port_forward.qgis_server is defined %}

    ports:
      # - "9003:80"
      {% if docker_port_forward.qgis_server.http is defined %}

      - "{{ docker_port_forward.qgis_server.http }}:80"

      {% endif %}
    {% endif %}


  qgis-server-backend:
    image: kartoza/qgis-server:2.18
    volumes:
      - '../src/geonode:/usr/src/app'
      - '../src/core:/usr/src/core'
      - '../src/geosafe:/usr/src/geosafe'
      - '../src/otf-project:/opt/qgis-server/plugins/otf-project'
      - './qgis-web:/var/www'
      - './qgis-server-log:/tmp/qgis-server'
    environment:
      # It is important to include this environment variable
      # QGIS-Server:LTR cgi needs it
      QGIS_PROJECT_FILE: ""

      {% for key, value in qgis_server.environment.iteritems() %}

      {{ key }}: "{{ value }}"

      {% endfor %}

    network_mode: "bridge"

  django:
    volumes:
      - '{{ project_path}}{{ component_path.geosafe }}:/usr/src/geosafe'
      - './inasafe/headless/output:{{ django.environment.GEOSAFE_IMPACT_OUTPUT_DIRECTORY }}'
      - '../src/otf-project:/opt/qgis-server/plugins'
      - './pycharm_helpers/django:/root/.pycharm_helpers'
    environment:
      USE_GEOSAFE: "{{ use_geosafe }}"
      OGC_BACKEND: "geonode.{{ ogc_backend }}"
      CELERY_TASK_ALWAYS_EAGER: "False"

      {% for key, value in django.environment.iteritems() %}

      {{ key }}: "{{ value }}"

      {% endfor %}

    {% if django.command is defined %}

    command: {{ django.command }}

    {% endif %}
    {% if docker_port_forward.django is defined %}

    ports:
      # - "9000:22"
      {% if docker_port_forward.django.ssh is defined %}

      - "{{ docker_port_forward.django.ssh }}:22"

      {% endif %}
    {% endif %}

    links:
      - qgis-server
      - inasafe-output

  {% if docker_port_forward.web is defined %}

  web:

    {% if web.command is defined %}

    command: {{ web.command }}

    {% endif %}

    ports:
      # - "80:80"
      {% if docker_port_forward.web.http is defined %}

      - "{{ docker_port_forward.web.http }}:80"

      {% endif %}
  {% endif %}

  celery:
    volumes:
      - '{{ project_path}}{{ component_path.geosafe }}:/usr/src/geosafe'
      - './inasafe/headless/output:{{ django.environment.GEOSAFE_IMPACT_OUTPUT_DIRECTORY }}'
      - './pycharm_helpers/celery:/root/.pycharm_helpers'
    environment:
      USE_GEOSAFE: "{{ use_geosafe }}"
      OGC_BACKEND: "geonode.{{ ogc_backend }}"
      CELERY_TASK_ALWAYS_EAGER: "False"

      {% for key, value in django.environment.iteritems() %}

      {{ key }}: "{{ value }}"

      {% endfor %}
    {% if celery.command is defined %}

    command: {{ celery.command }}

    {% endif %}
    {% if docker_port_forward.celery is defined %}

    ports:
      # - "9001:22"
      {% if docker_port_forward.celery.ssh is defined %}
      - "{{ docker_port_forward.celery.ssh }}:22"
      {% endif %}
    {% endif %}

    links:
      - qgis-server
      - inasafe-output

  inasafe-output:
    image: nginx
    volumes:
      - ./inasafe/headless/output:/usr/share/nginx/html/output
    ports:
      - "8081:80"
    network_mode: "bridge"

  inasafe-headless:
    image: inasafe/headless_processor
    restart: on-failure
    environment:

      {% for key, value in inasafe_headless.environment.iteritems() %}

      {{ key }}: "{{ value }}"

      {% endfor %}

    volumes:
      - './inasafe/headless/tmp:/tmp/inasafe'
      - './inasafe/headless/output:{{ inasafe_headless.environment.INASAFE_OUTPUT_DIR }}'
      - '../src/geonode/geonode/qgis_layer:{{ django.environment.INASAFE_LAYER_DIRECTORY }}'
      - './pycharm_helpers/inasafe-headless:/root/.pycharm_helpers'
    {% if inasafe_headless.command is defined %}

    command: {{ inasafe_headless.command }}

    {% else %}

    command: prod inasafe-headless-worker

    {% endif %}
    {% if docker_port_forward.inasafe_headless is defined %}

    ports:
      # - "9002:22"
      {% if docker_port_forward.inasafe_headless.ssh is defined %}

      - "{{ docker_port_forward.inasafe_headless.ssh }}:22"

      {% endif %}
    {% endif %}

    links:
      - rabbitmq:rabbitmq
      - web:web
      - django:django
    network_mode: "bridge"

  inasafe-headless-analysis:
    image: inasafe/headless_processor
    restart: on-failure
    environment:

      {% for key, value in inasafe_headless.environment.iteritems() %}

      {{ key }}: "{{ value }}"

      {% endfor %}

    volumes:
      - './inasafe/headless/tmp:/tmp/inasafe'
      - './inasafe/headless/output:{{ inasafe_headless.environment.INASAFE_OUTPUT_DIR }}'
      - '../src/geonode/geonode/qgis_layer:{{ django.environment.INASAFE_LAYER_DIRECTORY }}'
      - './pycharm_helpers/inasafe-headless:/root/.pycharm_helpers'
    {% if inasafe_headless_analysis.command is defined %}

    command: {{ inasafe_headless_analysis.command }}

    {% else %}

    command: prod inasafe-headless-worker

    {% endif %}
    {% if docker_port_forward.inasafe_headless_analysis is defined %}

    ports:
      # - "9002:22"
      {% if docker_port_forward.inasafe_headless_analysis.ssh is defined %}

      - "{{ docker_port_forward.inasafe_headless_analysis.ssh }}:22"

      {% endif %}
    {% endif %}

    links:
      - rabbitmq:rabbitmq
      - web:web
      - django:django
    network_mode: "bridge"
